#--------------------------------------------------------------------------
#
#   Copyright (c) 2005, Paul Koning (see license.txt)
#
#   Name: Makefile.wxpterm
#
#   Description:
#       Build wxWidgets version of PLATO terminal emulation.
#
#--------------------------------------------------------------------------

PTERMVERSION ?= $(shell ./getkitver.py  ptermversion.h)

DEFWXDIR = /usr/local

ifeq ("$(HOST)","Darwin")
ARCHCFLAGS ?= -arch i386
#ARCHCFLAGS =  -arch ppc
INCL ?= -I/usr/local/include -I/usr/include
SDLPATH ?= /usr/local
SDLINCL ?= `sdl-config --cflags`
PATH:=$(SDLPATH)/bin:$(PATH)
SDLLIBS ?= `sdl-config --static-libs`
endif
#else
SDLPATH ?= /usr/local
SDLINCL ?= `sdl-config --cflags`
PATH:=$(SDLPATH)/bin:$(PATH)
ifeq ("$(TYPE)","static")
SDLLIBS ?= `sdl-config --static-libs`
else
SDLLIBS ?= `sdl-config --libs`
endif

SNDINCL ?= /usr/local/include
SNDLIBS ?= -L/usr/local/lib -lsndfile

# if the wxmumble dir doesn't exist, try for plain /usr
ifeq ("$(wildcard $(DEFWXDIR))","")
DEFWXDIR=/usr
endif
WXDIR ?= $(DEFWXDIR)

PATH:=$(WXDIR)/bin:$(PATH)

WXCONFIG ?= wx-config
CXXFLAGS = `$(WXCONFIG) --cxxflags` -fno-strict-aliasing  -I $(SNDINCL)
WXLIBS	= `$(WXCONFIG) --libs` $(EXTRALIBS) 
WXVERSION = `$(WXCONFIG) --version` 

PTERMSVN := $(shell svn info pterm_wx.cpp | awk '/Revision/{print $$2}')
PTERMSTAT := $(shell svn status pterm_wx.cpp)
ifeq ("$(PTERMSTAT)","")
PTERMSVNREV := $(PTERMSVN)
else
PTERMSVNREV := "$(PTERMSVN)+"
endif

GCCVERSION := $(shell gcc --version 2>/dev/null| head -1 | awk '{print $$3}')
GCCVERSION := $(word 1, $(subst ., ,$(GCCVERSION)))

MSGFLAGS ?= -U

SDLCFLAGS = $(SDLINCL)

PTOBJS	= dtnetsubs.o pterm_sdl.o pterm_wx.o 8080a.o

ifneq ("$(PTERMVERSION)","xxx")
#LANGUAGES = $(shell cat languages)
#MOFILES = $(addsuffix /pterm.mo,$(LANGUAGES))
LANGUAGES =
MOFILES =
endif
LINK=$(CXX)
##ifeq ("$(TYPE)","static")
ifeq ("$(HOST)","Darwin")
LINK=$(CC) -lstdc++-static
endif
##endif

.PHONY : pterm-kit langdirs wxversion pterm-v$(PTERMVERSION).tar.bz2 info

info:
	@echo wxdir: $(WXDIR)
	@echo path:  $(PATH)
	@echo wxversion: $(WXVERSION)
	@echo gccversion: $(GCCVERSION)
	@echo ptermsvn: $(PTERMSVNREV)

pterm:	$(PTOBJS)
	export LD_RUN_PATH=$(WXDIR)/lib ; \
	$(LINK) $(ARCHCFLAGS) $(LDFLAGS) -g2 -o $@ $+ $(WXLIBS) $(SDLLIBS) $(SNDLIBS) $(LIBS) $(SETPATH)
ifeq ("$(TYPE)","static")
ifeq ("$(HOST)","Darwin")
	#strip $@


else
	objcopy  -S -R.compact_rel -R.pdr -R.ident -R.comment $@
endif
endif

wxversion.h: wxversion
	@echo "#define WXVERSION \"$(WXVERSION)\"" > wxversion.h.tmp
	@date +"#define PTERMBUILDDATE \"%e %B %Y\"" >> wxversion.h.tmp
	@echo "#define PTERMSVNREV \"$(PTERMSVNREV)\"" >> wxversion.h.tmp
	@if [ ! -r wxversion.h ]; then mv -f wxversion.h.tmp wxversion.h; else \
	  if cmp -s wxversion.h.tmp wxversion.h; then rm -f wxversion.h.tmp; \
	    else mv -f wxversion.h.tmp wxversion.h; fi; fi

dd60:	$(SOBJS) dd60.o knob.o iir.o 
	export LD_RUN_PATH=$(WXDIR)/lib ; \
	$(LINK)  $(ARCHCFLAGS) $(LDFLAGS) -o $@ $+ $(WXLIBS) $(LIBS) $(SETPATH)

dtoper:	$(SOBJS) dtoper.o 
	export LD_RUN_PATH=$(WXDIR)/lib ; \
	$(LINK)  $(ARCHCFLAGS) $(LDFLAGS) -o $@ $+ $(WXLIBS) $(LIBS) $(SETPATH)

# console display test program
cc545:	cc545.o knob.o iir.o
	export LD_RUN_PATH=$(WXDIR)/lib ; \
	$(LINK) $(CXXFLAGS) $(LDFLAGS) -o $@ $+ $(WXLIBS) $(LIBS) $(SETPATH)

ifeq ("$(HOST)","Darwin")

dd60.app: dd60 dd60.icns dd60-info.plist
	mkdir -p dd60.app/Contents/MacOS dd60.app/Contents/Resources
	/bin/echo -n "APPL????" > dd60.app/Contents/PkgInfo
	cp dd60 dd60.app/Contents/MacOS
	cp dd60-info.plist dd60.app/Contents/Info.plist
	cp dd60.icns dd60.app/Contents/Resources/
	touch $@

dtoper.app: dtoper dtoper.icns dtoper-info.plist
	mkdir -p dtoper.app/Contents/MacOS dtoper.app/Contents/Resources
	/bin/echo -n "APPL????" > dtoper.app/Contents/PkgInfo
	cp dtoper dtoper.app/Contents/MacOS
	cp dtoper-info.plist dtoper.app/Contents/Info.plist
	cp dtoper.icns dtoper.app/Contents/Resources/
	touch $@

cc545.app: cc545
	mkdir -p cc545.app/Contents/MacOS
	cp cc545 cc545.app/Contents/MacOS
	touch $@

Pterm.app: pterm pterm-info.plist.in pterm.icns $(MOFILES) 
	sed -e "s/@PTERMVERSION@/${PTERMVERSION}/" pterm-info.plist.in > pterm-info.plist
	mkdir -p Pterm.app/Contents/MacOS Pterm.app/Contents/Resources/en.lproj
	mkdir -p $(addprefix $(addprefix Pterm.app/Contents/Resources/,$(LANGUAGES)),.lproj)
	cp pterm-info.plist Pterm.app/Contents/Info.plist
	/bin/echo -n "APPL????" > Pterm.app/Contents/PkgInfo
	cp pterm Pterm.app/Contents/MacOS/pterm
	cp pterm.icns Pterm.app/Contents/Resources/Pterm.icns
	for d in $(LANGUAGES); do \
	    cp $$d/pterm.mo Pterm.app/Contents/Resources/$${d}.lproj; \
	done
	touch $@

pterm-empty.dmg:
	hdiutil create -size 12m pterm-empty.dmg -layout NONE
	dev=`hdid -nomount pterm-empty.dmg` ; newfs_hfs -v ptermvol $$dev ; hdiutil detach $$dev

ptermkit.dmg: Pterm.app pterm-empty.dmg
	cp pterm-empty.dmg ptermkit.dmg
	dev=`hdid ptermkit.dmg | awk '{ print $$1 }'` ; cp -Rp Pterm.app /Volumes/ptermvol; hdiutil detach $$dev

pterm-$(PTERMVERSION).dmg: ptermkit.dmg
	rm -f $@
	hdiutil convert -format UDZO $< -o $@
	hdiutil internet-enable -yes $@

pterm-kit: pterm-$(PTERMVERSION).dmg

else

pterm-kit: pterm.spec.in ptermversion.h $(MOFILES) pterm-v$(PTERMVERSION).tar.bz2
	sed -e "s/@PTERMVERSION@/${PTERMVERSION}/" pterm.spec.in > pterm.spec
	cp $(HOME)/pterm-v$(PTERMVERSION).tar.bz2 /usr/src/redhat/SOURCES
	rpmbuild -ba pterm.spec
	cp /usr/src/redhat/RPMS/i386/pterm-$(PTERMVERSION)-1.i386.rpm .
	cp /usr/src/redhat/SRPMS/pterm-$(PTERMVERSION)-1.src.rpm .

endif

mofiles: $(MOFILES)

pterm-v$(PTERMVERSION).tar.bz2: ptermversion.h
	mkdir pterm-$(PTERMVERSION)
	cd pterm-$(PTERMVERSION); for f in $(LANGUAGES); do mkdir $$f; cd $$f; ln -s ../../$$f/pterm.po .; cd ..; done
	cd pterm-$(PTERMVERSION); for f in license.txt *.h pterm_32.xpm pterm_wx.cpp pterm_sdl.c charset.c dtnetsubs.c 8080a.cpp Makefile.wxpterm Makefile.common Makefile languages getkitver.py ; do ln -s ../$$f .; done
	tar chjf $(HOME)/pterm-v$(PTERMVERSION).tar.bz2 pterm-$(PTERMVERSION)
	rm -rf pterm-$(PTERMVERSION)

pterm.dep: $(PTOBJS:.o=.d)

%.o : %.cpp
	$(CXX) -c -Wall $(CFLAGS) $(CXXFLAGS) $<

pterm_sdl.o : pterm_sdl.c
	$(CC) $(CFLAGS) $(SDLCFLAGS) -I $(SNDINCL) -c $<


%.d : %.cpp
	/bin/echo -n "$@ " > /tmp/$@
	$(CXX) $(CXXFLAGS) -MM -MG $< >> /tmp/$@
	mv -f /tmp/$@ $@

pterm_sdl.d : pterm_sdl.c
	/bin/echo -n "$@ " > /tmp/$@
	$(CC) $(INCL) $(SDLCFLAGS) -I $(SNDINCL) -MM -MG $< >> /tmp/$@
	mv -f /tmp/$@ $@

%.mo : %.po
	msgfmt -o $@ $<

pterm.pot : pterm_wx.cpp
	xgettext  --keyword=_  -C -o pterm.pot pterm_wx.cpp

%.po :  pterm.pot
	msgmerge $(MSGFLAGS) $@ pterm.pot

pterm_wx.o : pterm_wx.cpp wxversion.h ptermversion.h


# for pterm
INCL+=$(SDLINCL)
DEPFILES+=  $(PTOBJS:.o=.d) 
# for dd60
DEPFILES+= dd60.d knob.d iir.d
# for dtoper
DEPFILES+= dtoper.d

#---------------------------  End Of File  --------------------------------

